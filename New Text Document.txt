import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.apache.poi.ss.usermodel.*;
import org.junit.jupiter.api.Test;
import org.springframework.mock.web.MockMultipartFile;
import org.springframework.web.multipart.MultipartFile;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.util.*;

import static org.junit.jupiter.api.Assertions.*;

class SmartExcelJsonParserApplicationTests {

    private final SmartExcelJsonParserApplication parser = new SmartExcelJsonParserApplication();

    @Test
    void testExcelToJsonConversion() throws IOException {
        Workbook workbook = new XSSFWorkbook();
        Sheet sheet = workbook.createSheet("TestSheet");
        Row headerRow = sheet.createRow(0);
        headerRow.createCell(0).setCellValue("Name");
        headerRow.createCell(1).setCellValue("Age");
        
        Row dataRow = sheet.createRow(1);
        dataRow.createCell(0).setCellValue("John Doe");
        dataRow.createCell(1).setCellValue(30);
        
        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        workbook.write(outputStream);
        workbook.close();
        
        MultipartFile mockFile = new MockMultipartFile("file", "test.xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", outputStream.toByteArray());
        
        Map<String, Object> jsonOutput = parser.convertExcelToJson(mockFile);
        assertNotNull(jsonOutput);
        assertTrue(jsonOutput.containsKey("TestSheet"));
    }

    @Test
    void testJsonToExcelConversion() throws IOException {
        Map<String, List<Map<String, Object>>> jsonData = new HashMap<>();
        List<Map<String, Object>> sheetData = new ArrayList<>();
        Map<String, Object> row = new HashMap<>();
        row.put("Name", "Jane Doe");
        row.put("Age", 25);
        sheetData.add(row);
        jsonData.put("Sheet1", sheetData);
        
        ObjectMapper objectMapper = new ObjectMapper();
        byte[] jsonBytes = objectMapper.writeValueAsBytes(jsonData);
        MultipartFile mockFile = new MockMultipartFile("file", "test.json", "application/json", jsonBytes);
        
        assertDoesNotThrow(() -> parser.convertJsonToExcel(mockFile, new MockHttpServletResponse()));
    }
}